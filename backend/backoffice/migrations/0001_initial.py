# Generated by Django 5.1.2 on 2024-10-22 15:14

import backoffice.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id_location', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Lieu')),
                ('image', models.ImageField(upload_to='uploads/locations', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Lieu',
                'verbose_name_plural': 'Lieux',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id_offer', models.SmallAutoField(primary_key=True, serialize=False)),
                ('offer_name', models.CharField(max_length=10, verbose_name="Nom de l'offre")),
                ('number_of_seats', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Nombre de places')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Réduction')),
            ],
            options={
                'verbose_name': 'Offre',
                'verbose_name_plural': 'Offres',
            },
        ),
        migrations.CreateModel(
            name='Spectator',
            fields=[
                ('id_spectator', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nom')),
                ('date_of_birth', models.DateField(verbose_name='Date de naissance')),
                ('country', models.CharField(max_length=75, verbose_name='Pays')),
            ],
            options={
                'verbose_name': 'Spectateur',
                'verbose_name_plural': 'Spectateurs',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id_sport', models.SmallAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, verbose_name='Sport')),
                ('pictogram', models.ImageField(upload_to='uploads/sports', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Sport',
                'verbose_name_plural': 'Sports',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Nom')),
                ('auth_key', models.UUIDField(default=uuid.uuid4, verbose_name="Clé d'authentification")),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
            managers=[
                ('objects', backoffice.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id_cart', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cart_validation_date', models.DateTimeField(auto_now_add=True, verbose_name="Date d'achat")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id_event', models.SmallAutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('description', models.CharField(max_length=250)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tarif')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.location', verbose_name='Lieu')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.sport', verbose_name='Sport')),
            ],
            options={
                'verbose_name': 'Évènement',
                'verbose_name_plural': 'Évènements',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id_ticket', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('buying_key', models.UUIDField(default=uuid.uuid4, verbose_name="Clé d'achat")),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.cart', verbose_name='Commande')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.event', verbose_name='Épreuve')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.offer', verbose_name='Offre')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='SpectatorTicket',
            fields=[
                ('id_spectator_ticket', models.SmallAutoField(primary_key=True, serialize=False)),
                ('spectator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.spectator', verbose_name='Utilisateur')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Spectateur | Ticket',
                'verbose_name_plural': 'Spectateurs | Tickets',
                'constraints': [models.UniqueConstraint(fields=('spectator', 'ticket'), name='unique_spectator_ticket')],
            },
        ),
    ]
